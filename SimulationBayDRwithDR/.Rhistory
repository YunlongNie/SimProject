dlply(Paraset,.(obs))
require(plyr)
dlply(Paraset,.(obs))
do.call(cbind,dlply(Paraset,.(obs)))
require(xtable)
Paraset
xtable(Paraset)
xtable = xtable(Paraset)
print.xtable(xtable,table.placement="H")
xtable = xtable(Paraset[,1:2])
print.xtable(xtable,table.placement="H")
xtable = xtable(t(Paraset[,1:2]))
print.xtable(xtable,table.placement="H")
xtable = xtable((Paraset[,1:2]))
print.xtable(xtable,table.placement="H")
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
names(Paraset)
names(Paraset)[1:2] = c("n","lambda")
xtable = xtable((Paraset[,1:2]))
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
load("ParaSet.Rdata")
require(xtable)
names(Paraset)[1:2] = c("n","lambda")
xtable = xtable((Paraset[,1:2]))
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
xtable = xtable((Paraset[,1:2]),caption="\lambda values",label="LambdaValueSimBay")
xtable = xtable((Paraset[,1:2]),caption="$\lambda$ values",label="LambdaValueSimBay")
xtable = xtable((Paraset[,1:2]),caption="lambda values",label="LambdaValueSimBay")
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
xtable = xtable((Paraset[,1:2]),caption="$'\'lambda$ values",label="LambdaValueSimBay")
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
xtable = xtable((Paraset[,1:2]),caption="$'\\\'lambda$ values",label="LambdaValueSimBay")
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
xtable = xtable((Paraset[,1:2]),caption="$\\\lambda$ values",label="LambdaValueSimBay")
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
xtable = xtable((Paraset[,1:2]),caption="$'\'lambda$ values",label="LambdaValueSimBay")
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
xtable = xtable((Paraset[,1:2]),caption="$'//\'lambda$ values",label="LambdaValueSimBay")
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
xtable = xtable((Paraset[,1:2]),caption="$'\'lambda$ values",label="LambdaValueSimBay")
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
xtable = xtable((Paraset[,1:2]),caption="$\\\lambda$ values",label="LambdaValueSimBay")
xtable = xtable((Paraset[,1:2]),caption="$\ lambda$ values",label="LambdaValueSimBay")
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
xtable = xtable((Paraset[,1:2]),caption="$\\\ lambda$ values",label="LambdaValueSimBay")
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
xtable = xtable((Paraset[,1:2]),caption="$\\\lambda$ values",label="LambdaValueSimBay")
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
xtable = xtable((Paraset[,1:2]),caption="lambda values",label="LambdaValueSimBay")
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
sink("~/Dropbox/UBC/Thesis/SimuBayDRTable.tex")
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
sink()
xtable = xtable((Paraset[,1:2]),caption="lambda values",label="LambdaValueSimBay",digits=2)
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
xtable = xtable((Paraset[,1:2]),caption="lambda values",label="LambdaValueSimBay",digits=0)
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
xtable = xtable((Paraset[,1:2]),caption="lambda values",label="LambdaValueSimBay",digits=1)
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
xtable = xtable((Paraset[,1:2]),caption="lambda values",label="LambdaValueSimBay",digits=c(0,1))
xtable = xtable((Paraset[,1:2]),caption="lambda values",label="LambdaValueSimBay",digits=c(0,0,1))
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
source('~/Dropbox/UBC/Thesis/Simulation_Thesis/SimulationBayDRwithDR/GetTable.R', echo=TRUE)
sink("~/Dropbox/UBC/Thesis/SimuBayDRTable.tex")
print.xtable(xtable,table.placement="H",include.rownames=FALSE)
sink()
load("data/EstN1000n100.Rdata")
# g0 g1 g2 estimates Delta
filenames=list.files("data/")
res=as.data.frame(do.call(rbind,lapply(c(100,200,500),function(x){
do.call(rbind,lapply(filenames[grep(paste0("n",x,"_"),filenames)],function(name){
load(paste0("data/",name))
names(estimates) =c("dr","s","p","b")
c(sqrt(colMeans((estimates-Delta)^2)),Null=Delta,g2=g2,n=x)
}
)
)
}
)
))
require(reshape2)
res.melt=melt(res,id=c("n","g2"))
res.melt$variable
require(ggplot2)
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(g2),size=factor(g2)),angle=15,
position = position_jitter(w = 0.1, h = 0))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
dev.off()
dev.off()
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(g2),size=factor(g2)),angle=15,
position = position_jitter(w = 0.1, h = 0))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(variable),size=factor(g2)),angle=15,
position = position_jitter(w = 0.1, h = 0))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
ggsave(filename="Plots/SimulationBayDR.pdf")
require( tikzDevice )
cat("\begin")
cat("\\begin")
cat("\\begin{figure}[")
placement="H"
cat("\\begin{figure}[",placement)
cat("\\begin{figure}[",placement,"]")
cat("\\begin{figure}[",placement,"]",sep="")
cat("\\begin{figure}[",placement,"]\n",sep="")
cat("\\begin{center}\n",sep="")
cat("\\begin{figure}[",placement,"]\n",sep="")
cat("\\begin{center}\n",sep="")
cat("\\includegraphics{",filename,"}\n",sep="")
print.figure <- function(writeto,filename,placement="H",caption,label)
{
sink(writeto)
cat("\\begin{figure}[",placement,"]\n",sep="")
cat("\\begin{center}\n",sep="")
cat("\\includegraphics{",filename,"}\n",sep="")
cat("\\end{center}\n",sep="")
cat("\\end{figure}\n",sep="")
sink()
}
cat("DatGeneration2.R")
cat(file="DatGeneration2.R")
system("cat DatGeneration2.R")
print.figure <- function(writeto,filename,placement="H",caption,label)
{
sink(writeto)
cat("\\begin{figure}[",placement,"]\n",sep="")
cat("\\begin{center}\n",sep="")
cat("\\includegraphics{",filename,"}\n",sep="")
cat("\\end{center}\n",sep="")
cat("\\end{figure}\n",sep="")
sink()
system(paste("cat",writeto))
}
print.figure(writeto="try.tex",filename="123",caption=NULL,label=NULL)
cat("Null")
cat(Null)
print.figure <- function(writeto,filename,placement="H",caption,label)
{
sink(writeto)
cat("\\begin{figure}[",placement,"]\n",sep="")
cat("\\begin{center}\n",sep="")
cat("\\includegraphics{",filename,"}\n",sep="")
cat("\\end{center}\n",sep="")
if(!missing(caption)) {cat("\\caption{", caption,"}\n",sep="")}
if(!missing(label)) {cat("\\label{", label,"}\n",sep="")}
cat("\\end{figure}\n",sep="")
sink()
system(paste("cat",writeto))
}
print.figure(writeto="try.tex",filename="123")
print.figure(writeto="try.tex",filename="123",caption="ha",label="123")
print.figure(writeto="~/Desktop/try.tex",filename="123",caption="ha",label="123")
ggsave(filename="~/Dropbox/UBC/Thesis/SimulationBayDR1.pdf")
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot1.tex",filename="SimulationBayDR1",
caption="Simulation Results",label="SimDR1")
gplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(variable),size=factor(g2)),angle=15,
position = position_jitter(w = 0.1, h = 0))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(variable),size=factor(g2)),angle=15,
position = position_jitter(w = 0.1, h = 0))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(variable),size=factor(g2)),angle=15,
position = position_dodge())+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(variable),size=factor(g2)),angle=15,
position = position_dodge(width=0.1))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(variable),size=factor(g2)),angle=15,
position = position_dodge(width=0.2))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(variable)),angle=15,
position = position_dodge(width=0.2))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
ggsave(filename="~/Dropbox/UBC/Thesis/SimulationBayDR1.pdf")
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
ggsave(filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"))
figName= "SimulationBayDR1"
ggsave(filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"))
capName="\\Delta_{Null}"
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot1.tex",filename=figName,
caption="Simulation Results",label="SimDR1")
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot1.tex",filename=figName,
caption=capName,label="SimDR1")
capName="$\\Delta_{Null}=0$"
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot1.tex",filename=figName,
caption=capName,label="SimDR1")
capName="$\\Delta_{Null}=0$, so Null represents the true value of $\\Delta$"
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot1.tex",filename=figName,
caption=capName,label="SimDR1")
load("data/EstN1000n100.Rdata")
# g0 g1 g2 estimates Delta
filenames=list.files("data/")
res=as.data.frame(do.call(rbind,lapply(c(100,200,500),function(x){
do.call(rbind,lapply(filenames[grep(paste0("n",x,"_"),filenames)],function(name){
load(paste0("data/",name))
names(estimates) =c("D","S","P","B")
c(sqrt(colMeans((estimates-Delta)^2)),Null=Delta,g2=g2,n=x)
}
)
)
}
)
))
require(reshape2)
res.melt=melt(res,id=c("n","g2"))
res.melt$variable
require(ggplot2)
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(variable)),angle=15,
position = position_dodge(width=0.2))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
figName= "SimulationBayDR1"
ggsave(filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"))
dev.off()
ggsave(filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"))
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
capName="Root-mean-squared error of estimates $\\Delta_$.
$\\Delta_{Null}=0$, so Null represents the true value of $\\Delta$"
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot1.tex",filename=figName,
caption=capName,label="SimDR1")
capName="Root-mean-squared error of estimates $\\Delta$.
$\\Delta_{Null}=0$, so Null represents the true value of $\\Delta$"
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot1.tex",filename=figName,
caption=capName,label="SimDR1")
capName="Root-mean-squared error of estimates $\\widehat \\Delta$.
$\\Delta_{Null}=0$, so Null represents the true value of $\\Delta$"
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot1.tex",filename=figName,
caption=capName,label="SimDR1")
capName="Root-mean-squared error of estimates $\\widehat \\Delta_{D},\\widehat \\Delta_{S},\\widehat \\Delta_{P},\\widehat \\Delta_{B}$.
$\\Delta_{Null}=0$, so Null represents the true value of $\\Delta$"
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot1.tex",filename=figName,
caption=capName,label="SimDR1")
capName="Root-mean-squared error of estimates $\\widehat \\Delta_{D},\\widehat \\Delta_{S},\\widehat \\Delta_{P},\\widehat \\Delta_{B}$.
$\\widehat \\Delta_{Null}=0$, so Null represents the true value of $\\Delta$"
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot1.tex",filename=figName,
caption=capName,label="SimDR1")
load("data/EstN1000n100.Rdata")
# g0 g1 g2 estimates Delta
filenames=list.files("data/")
res=as.data.frame(do.call(rbind,lapply(c(100,200,500),function(x){
do.call(rbind,lapply(filenames[grep(paste0("n",x,"_"),filenames)],function(name){
load(paste0("data/",name))
names(estimates) =c("D","S","P","B")
c(sqrt(colMeans((estimates-Delta)^2)),N=Delta,g2=g2,n=x)
}
)
)
}
)
))
require(reshape2)
res.melt=melt(res,id=c("n","g2"))
res.melt$variable
require(ggplot2)
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(variable)),angle=15,
position = position_dodge(width=0.2))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
figName= "SimulationBayDR1"
ggsave(filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"))
capName="Root-mean-squared error of estimates $\\widehat \\Delta_{D},\\widehat \\Delta_{S},\\widehat \\Delta_{P},\\widehat \\Delta_{B}$.
$\\widehat \\Delta_{N}=0$, so N represents the true value of $\\Delta$"
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot1.tex",filename=figName,
caption=capName,label="SimDR1")
dev.off()
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(variable)),angle=15,
position = position_dodge(width=0.2))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
figName= "SimulationBayDR1"
ggsave(filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"))
dev.off()
dev.off()
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(variable)),angle=15,
position = position_dodge(width=0.2))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
figName= "SimulationBayDR1"
ggsave(filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"))
logit
require(boot)
logit(0.5)
logit(0.05)
logit(0.05)/4
filenames=list.files("data/")
filenames
load("data/EstN1000n100.Rdata")
filenames=list.files("data/exp") # or filenames=list.files("data/")
filenames
res=as.data.frame(do.call(rbind,lapply(c(100,200,500),function(x){
do.call(rbind,lapply(filenames[grep(paste0("n",x,"_"),filenames)],function(name){
load(paste0("data/",name))
names(estimates) =c("D","S","P","B")
c(sqrt(colMeans((estimates-Delta)^2)),N=Delta,g2=g2,n=x)
}
)
)
}
)
))
res=as.data.frame(do.call(rbind,lapply(c(100,200,500),function(x){
do.call(rbind,lapply(filenames[grep(paste0("n",x,"_"),filenames)],function(name){
load(paste0("data/exp/",name))
names(estimates) =c("D","S","P","B")
c(sqrt(colMeans((estimates-Delta)^2)),N=Delta,g2=g2,n=x)
}
)
)
}
)
))
dir = "data/exp" # or dir ="data/"
filenames=list.files(dir) # or filenames=list.files("data/")
res=as.data.frame(do.call(rbind,lapply(c(100,200,500),function(x){
do.call(rbind,lapply(filenames[grep(paste0("n",x,"_"),filenames)],function(name){
load(paste0(dir,name))
names(estimates) =c("D","S","P","B")
c(sqrt(colMeans((estimates-Delta)^2)),N=Delta,g2=g2,n=x)
}
)
)
}
)
))
dir = "data/exp" # or dir ="data/"
dir = "data/exp/" # or dir ="data/"
filenames=list.files(dir) # or filenames=list.files("data/")
res=as.data.frame(do.call(rbind,lapply(c(100,200,500),function(x){
do.call(rbind,lapply(filenames[grep(paste0("n",x,"_"),filenames)],function(name){
load(paste0(dir,name))
names(estimates) =c("D","S","P","B")
c(sqrt(colMeans((estimates-Delta)^2)),N=Delta,g2=g2,n=x)
}
)
)
}
)
))
require(reshape2)
res.melt=melt(res,id=c("n","g2"))
res.melt$variable
require(ggplot2)
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(variable)),angle=15,
position = position_dodge(width=0.2))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
figName= "SimulationBayDR2"
ggsave(filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"))
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
figName= "SimulationBayDR2"
capName="Root-mean-squared error of estimates $\\widehat \\Delta_{D},\\widehat \\Delta_{S},\\widehat \\Delta_{P},\\widehat \\Delta_{B}$.
$\\widehat \\Delta_{N}=0$, so N represents the true value of $\\Delta$. when the exposure model is wrong. "
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot2.tex",filename=figName,
caption=capName,label="SimDR2")
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot2.tex",filename=figName,placement="h",
caption=capName,label="SimDR2")
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot1.tex",filename=figName,placement="h",
caption=capName,label="SimDR1")
capName="Root-mean-squared error of estimates $\\widehat \\Delta_{D},\\widehat \\Delta_{S},\\widehat \\Delta_{P},\\widehat \\Delta_{B}$.
$\\widehat \\Delta_{N}=0$, so N represents the true value of $\\Delta$.
Both the outcome model and propensity score are not correctly specified."
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot2.tex",filename=figName,placement="h",
caption=capName,label="SimDR2")
capName="Root-mean-squared error of estimates $\\widehat \\Delta_{D},\\widehat \\Delta_{S},\\widehat \\Delta_{P},\\widehat \\Delta_{B}$.
$\\widehat \\Delta_{N}=0$, so N represents the true value of $\\Delta$.
The exposure-generating mechanism is updated into \\eqref{expModel2}."
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot2.tex",filename=figName,placement="h",
caption=capName,label="SimDR2")
dir ="data/"
filenames=list.files(dir) # or filenames=list.files("data/")
res=as.data.frame(do.call(rbind,lapply(c(100,200,500),function(x){
do.call(rbind,lapply(filenames[grep(paste0("n",x,"_"),filenames)],function(name){
load(paste0(dir,name))
names(estimates) =c("D","S","P","B")
c(sqrt(colMeans((estimates-Delta)^2)),N=Delta,g2=g2,n=x)
}
)
)
}
)
))
require(reshape2)
res.melt=melt(res,id=c("n","g2"))
res.melt$variable
require(ggplot2)
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(variable)),angle=15,
position = position_dodge(width=0.2))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
figName= "SimulationBayDR1"
capName="Root-mean-squared error of estimates $\\widehat \\Delta_{D},\\widehat \\Delta_{S},\\widehat \\Delta_{P},\\widehat \\Delta_{B}$.
$\\widehat \\Delta_{N}=0$, so N represents the true value of $\\Delta$."
ggsave(filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"))
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot1.tex",filename=figName,placement="h",
caption=capName,label="SimDR1")
ggsave(filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=8,height=4)
ggsave(filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=8,height=5)
ggsave(filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=10,height=4.5)
dir = "data/exp/" # or dir ="data/"
filenames=list.files(dir) # or filenames=list.files("data/")
res=as.data.frame(do.call(rbind,lapply(c(100,200,500),function(x){
do.call(rbind,lapply(filenames[grep(paste0("n",x,"_"),filenames)],function(name){
load(paste0(dir,name))
names(estimates) =c("D","S","P","B")
c(sqrt(colMeans((estimates-Delta)^2)),N=Delta,g2=g2,n=x)
}
)
)
}
)
))
require(reshape2)
res.melt=melt(res,id=c("n","g2"))
res.melt$variable
require(ggplot2)
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(variable)),angle=15,
position = position_dodge(width=0.2))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
figName= "SimulationBayDR2"
ggsave(filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=10,height=4.5)
library("BayDR", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
bay.est.new
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(variable)),angle=15,
position = position_dodge(width=0.2))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
load("data/EstN1000n100.Rdata")
# g0 g1 g2 estimates Delta
dir = "data/exp/" # or dir ="data/"
filenames=list.files(dir) # or filenames=list.files("data/")
res=as.data.frame(do.call(rbind,lapply(c(100,200,500),function(x){
do.call(rbind,lapply(filenames[grep(paste0("n",x,"_"),filenames)],function(name){
load(paste0(dir,name))
names(estimates) =c("D","S","P","B")
c(sqrt(colMeans((estimates-Delta)^2)),N=Delta,g2=g2,n=x)
}
)
)
}
)
))
require(reshape2)
res.melt=melt(res,id=c("n","g2"))
res.melt$variable
require(ggplot2)
ggplot(data=res.melt) +geom_text(aes(y=value,x=g2,label=variable,
color=factor(variable)),angle=15,
position = position_dodge(width=0.2))+
facet_grid(~n,scales = "free_x")+theme(legend.position = "none") +
scale_size_discrete(range = c(3, 5))+xlab("lambda")+ylab("RMSE")
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
figName= "SimulationBayDR1"
capName="Root-mean-squared error of estimates $\\widehat \\Delta_{D},\\widehat \\Delta_{S},\\widehat \\Delta_{P},\\widehat \\Delta_{B}$.
$\\widehat \\Delta_{N}=0$, so N represents the true value of $\\Delta$."
print.figure(writeto="~/Dropbox/UBC/Thesis/SimulationBayDRPlot1.tex",filename=figName,placement="h",
caption=capName,label="SimDR1")
cat("\\begin{figure}[",placement,"]\n",sep="")
cat("\\begin{center}\n",sep="")
cat("\\includegraphics{",filename,"}\n",sep="")
cat("\\end{center}\n",sep="")
if(!missing(caption)) {cat("\\caption{", caption,"}\n",sep="")}
caption="my fig"
if(!missing(caption)) {cat("\\caption{", caption,"}\n",sep="")}
cat("\\end{figure}\n",sep="")
load("ParaSet.Rdata")
require(xtable)
names(Paraset)[1:2] = c("n","$\\lambda$")
xtable = xtable((Paraset[,1:2]),caption="$\\lambda$ values",label="LambdaValueSimBay",digits=c(0,0,1))
sink("~/Dropbox/UBC/Thesis/SimuBayDRTable.tex")
print.xtable(xtable,table.placement="H",include.rownames=FALSE,sanitize.colnames.function = identity)
sink()
source('~/Dropbox/UBC/Thesis/Simulation_Thesis/SimulationBayDRwithDR/GetTable.R', echo=TRUE)
source('~/Dropbox/UBC/Thesis/Simulation_Thesis/SimulationBayDRwithDR/GetTable.R', echo=TRUE)
sink()
dev.off()
load("ParaSet.Rdata")
require(xtable)
names(Paraset)[1:2] = c("n","$\\lambda$")
cap = "$\\lambda$ values are chosen according to the goodness of fit test. "
xtable = xtable((Paraset[,1:2]),caption=cap,label="LambdaValueSimBay",digits=c(0,0,1))
sink("~/Dropbox/UBC/Thesis/SimuBayDRTable.tex")
print.xtable(xtable,table.placement="H",include.rownames=FALSE,sanitize.colnames.function = identity)
sink()
