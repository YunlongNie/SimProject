causal= causal.est(r=r,pho=pho,
gamma0 = gamma0, gamma1 = gamma1, gamma2 = gamma2, lambda1 = lambda1,lambda2=lambda2)
filenames = list.files(path="Simulation2/")
filenames = list.files(path="Simulation2/")
input.file = filenames[grep("outW",filenames)]
for (i in 1:length(input.file))
{
load(paste0("Simulation2/",input.file[i]))
Z = qnorm(0.975)
con.reg.asp = data.frame(lower=res$reg-Z*res$sd.reg,upper=res$reg+Z*res$sd.reg)
con.reg.bs = data.frame(lower=res$reg-Z*res$reg.sd.bs,upper=res$reg+Z*res$reg.sd.bs)
# cov.reg.asp = coverage.rate(con.reg.asp,causal)
# cov.reg.bs = coverage.rate(con.reg.bs,causal)
con.prp.bs = data.frame(lower=res$prp-Z*res$prp.sd.bs,upper=res$prp+Z*res$prp.sd.bs)
#cov.prp.bs = coverage.rate(con.prp.bs,causal)
con.dr.asp =data.frame(lower=res$dr-Z*res$sd.dr.asp,upper=res$dr+Z*res$sd.dr.asp)
con.dr.bs = data.frame(lower=res$dr-Z*res$sd.dr.bs,upper=res$dr+Z*res$sd.dr.bs)
# cov.dr.asp = coverage.rate(con.dr.asp,causal)
# cov.dr.bs = coverage.rate(con.dr.bs,causal)
cov.rate = c(cov.reg.asp = coverage.rate(con.reg.asp,causal),
cov.reg.bs = coverage.rate(con.reg.bs,causal),
cov.dr.asp = coverage.rate(con.dr.asp,causal),
cov.dr.bs = coverage.rate(con.dr.bs,causal),
cov.prp.bs = coverage.rate(con.prp.bs,causal)
)
mse = colMeans(res[,c("dr","prp","reg")] -causal)^2
save(mse,cov.rate,res,causal,file=paste0("Simulation2/",input.file[i]))
}
filenames = list.files(path="Simulation2/")
input.file = filenames[grep("outW",filenames)]
obs.n=c(100,200,500)
#### source process
source("Simulation2/latexTableRes.R")
causal
alin = "r|c||rrrr|"
cap="Outcome is not correctly specified"
sink("~/Dropbox/UBC/Thesis/tableTemp.tex")
print.xtable(xtable(format(res.table[,c(2,1,3:5)],digits=4),caption=cap,align=alin,label="outW.res"),
include.rownames=FALSE,table.placement="H")
sink()
res.table
cov.res = data.frame(n=obs.n,do.call(rbind,cov.t))
cov.res
print.xtable(xtable(cov.res,caption="coverage",align=alin),include.rownames=FALSE)
sink("~/Dropbox/UBC/Thesis/tableTemp_outWCov.tex")
print.xtable(xtable(cov.res,caption="coverage"),include.rownames=FALSE,table.placement="H")
sink()
print.xtable(xtable(cov.res,caption="coverage"),include.rownames=FALSE,table.placement="H")
print.xtable(xtable(format(cov.res,digits=4),caption="coverage"),include.rownames=FALSE,table.placement="H")
sink("~/Dropbox/UBC/Thesis/tableTemp_outWCov.tex")
print.xtable(xtable(format(cov.res,digits=4),caption="coverage"),include.rownames=FALSE,table.placement="H")
sink()
sink("~/Dropbox/UBC/Thesis/tableTemp.tex")
print.xtable(xtable(round(res.table[,c(2,1,3:5)],4),caption=cap,align=alin,label="outW.res"),
include.rownames=FALSE,table.placement="H")
sink()
round(res.table[,c(2,1,3:5)],4)
filenames = list.files(path="Simulation2/")
input.file = filenames[grep("outW",filenames)]
obs.n=c(100,200,500)
#### source process
source("Simulation2/latexTableRes.R")
round(res.table[,c(2,1,3:5)],4)
format(res.table[,c(2,1,3:5)],4)
format(res.table[,c(2,1,3:5)],3)
format(res.table[,c(2,1,3:5)],4)
print.xtable(xtable(res.table[,c(2,1,3:5)],digits=3,caption=cap,align=alin,label="outW.res"),
include.rownames=FALSE,table.placement="H")
res.table[,c(2,1,3:5)]
melt.mse
(mse.res
mse.res
melt.temp=melt(round(mse.res,4),id.vars=1)
head(melt.temp)
melt.temp=melt.temp[with(melt.temp,order(n)),]
names(melt.temp) = c("obs","estimate","mse")
melt.mse=melt.temp
melt.mse
filenames = list.files(path="Simulation2/")
input.file = filenames[grep("outW",filenames)]
obs.n=c(100,200,500)
#### source process
source("Simulation2/latexTableRes.R")
print.xtable(xtable(format(res.table[,c(2,1,3:5)],4),caption=cap,align=alin,label="outW.res"),
include.rownames=FALSE,table.placement="H")
print.xtable(xtable(format(res.table[,c(2,1,3:5)],digits=4),caption=cap,align=alin,label="outW.res"),
include.rownames=FALSE,table.placement="H")
print.xtable(xtable(format(res.table[,c(2,1,3:5)],digits=3),caption=cap,align=alin,label="outW.res"),
include.rownames=FALSE,table.placement="H")
alin = "r|c||rrrr|"
cap="Outcome is not correctly specified"
sink("~/Dropbox/UBC/Thesis/tableTemp.tex")
print.xtable(xtable(format(res.table[,c(2,1,3:5)],digits=3),caption=cap,align=alin,label="outW.res"),
include.rownames=FALSE,table.placement="H")
sink()
sink("~/Dropbox/UBC/Thesis/tableTemp_outWCov.tex")
print.xtable(xtable(format(cov.res,digits=3),caption="coverage"),include.rownames=FALSE,table.placement="H")
sink()
cov.res = data.frame(n=obs.n,do.call(rbind,cov.t))
cov.res
sink("~/Dropbox/UBC/Thesis/tableTemp_outWCov.tex")
print.xtable(xtable(format(cov.res,digits=3),caption="coverage"),include.rownames=FALSE,table.placement="H")
sink()
causal
cap=paste0("Outcome is not correctly specified with true causal effect being ",causal)
cap
cap=paste0("Outcome is not correctly specified with true causal effect being ",round(causal,3))
cap
alin = "r|c||rrrr|"
cap=paste0("Outcome is not correctly specified with true causal effect being ",round(causal,3))
sink("~/Dropbox/UBC/Thesis/tableTemp.tex")
print.xtable(xtable(format(res.table[,c(2,1,3:5)],digits=3),caption=cap,align=alin,label="outW.res"),
include.rownames=FALSE,table.placement="H")
sink()
r=4;pho=0.7;
alpha2 = 2;alpha1=0;alpha3=2
gamma0 = -1.386294; gamma1 = 1; gamma2 = 1; lambda1 = 0;lambda2=0
causal = causal.est(r=r,pho=pho,
gamma0 = gamma0, gamma1 = gamma1, gamma2 = gamma2, lambda1 = lambda1,lambda2=lambda2)
filenames = list.files(path="Simulation2/")
input.file = filenames[grep("prpW",filenames)]
for (i in 1:length(input.file))
{
load(paste0("Simulation2/",input.file[i]))
Z = qnorm(0.975)
con.reg.asp = data.frame(lower=res$reg-Z*res$sd.reg,upper=res$reg+Z*res$sd.reg)
con.reg.bs = data.frame(lower=res$reg-Z*res$reg.sd.bs,upper=res$reg+Z*res$reg.sd.bs)
# cov.reg.asp = coverage.rate(con.reg.asp,causal)
# cov.reg.bs = coverage.rate(con.reg.bs,causal)
con.prp.bs = data.frame(lower=res$prp-Z*res$prp.sd.bs,upper=res$prp+Z*res$prp.sd.bs)
#cov.prp.bs = coverage.rate(con.prp.bs,causal)
con.dr.asp =data.frame(lower=res$dr-Z*res$sd.dr.asp,upper=res$dr+Z*res$sd.dr.asp)
con.dr.bs = data.frame(lower=res$dr-Z*res$sd.dr.bs,upper=res$dr+Z*res$sd.dr.bs)
# cov.dr.asp = coverage.rate(con.dr.asp,causal)
# cov.dr.bs = coverage.rate(con.dr.bs,causal)
cov.rate = c(cov.reg.asp = coverage.rate(con.reg.asp,causal),
cov.reg.bs = coverage.rate(con.reg.bs,causal),
cov.dr.asp = coverage.rate(con.dr.asp,causal),
cov.dr.bs = coverage.rate(con.dr.bs,causal),
cov.prp.bs = coverage.rate(con.prp.bs,causal)
)
mse = colMeans(res[,c("dr","prp","reg")] -causal)^2
save(mse,cov.rate,res,causal,file=paste0("Simulation2/",input.file[i]))
}
filenames = list.files(path="Simulation2/")
input.file = filenames[grep("prpW",filenames)]
obs.n=c(100,200,500)
source("Simulation2/latexTableRes.R")
input.file = filenames[grep("prpW",filenames)][-1]
input.file
obs.n=c(100,200,500)
source("Simulation2/latexTableRes.R")
model = "prpW"
input.file = filenames[grep("prpW",filenames)][-1]
model = "prpW"
obs.n=c(100,200,500)
#### source process
source("Simulation2/latexTableRes.R")
causal
#### output1 latex table mse is sqrt(mse)
alin = "r|c||rrrr|"
cap=paste0("Outcome is not correctly specified with true causal effect being ",round(causal,3))
sink(paste0("~/Dropbox/UBC/Thesis/tableEst_",model,".tex"))
print.xtable(xtable(format(res.table[,c(2,1,3:5)],digits=3),caption=cap,align=alin,label="outW.res"),
include.rownames=FALSE,table.placement="H")
sink()
#### output2 coverage rate#####
cov.res = data.frame(n=obs.n,do.call(rbind,cov.t))
cov.res
sink(paste0("~/Dropbox/UBC/Thesis/tableCov_",model,".tex"))
print.xtable(xtable(format(cov.res,digits=3),caption="coverage"),include.rownames=FALSE,table.placement="H")
sink()
format(res.table[,c(2,1,3:5)],digits=3)
filenames = list.files(path="Simulation2/")
input.file = filenames[grep("prpW",filenames)][-1]
model = "prpW"
obs.n=c(100,200,500)
#### source process
source("Simulation2/latexTableRes.R")
causal
#### output1 latex table mse is sqrt(mse)
alin = "r|c||rrrr|"
cap=paste0("Outcome is not correctly specified with true causal effect being ",round(causal,3))
sink(paste0("~/Dropbox/UBC/Thesis/tableEst_",model,".tex"))
print.xtable(xtable(format(res.table[,c(2,1,3:5)],digits=3),caption=cap,align=alin,label="outW.res"),
include.rownames=FALSE,table.placement="H")
sink()
#### output2 coverage rate#####
cov.res = data.frame(n=obs.n,do.call(rbind,cov.t))
cov.res
sink(paste0("~/Dropbox/UBC/Thesis/tableCov_",model,".tex"))
print.xtable(xtable(format(cov.res,digits=3),caption="coverage"),include.rownames=FALSE,table.placement="H")
sink()
load("~/Dropbox/UBC/Thesis/Simulation_Thesis/Thesis_SimulationDR/Simulation2/prpW500_500.Rdata")
cov.rate
res
r=4;pho=0.7;
gamma0 = -1.386294; gamma1 = 1; gamma2 = 1; lambda1 = 0;lambda2=0
causal = causal.est(r=r,pho=pho,
gamma0 = gamma0, gamma1 = gamma1, gamma2 = gamma2, lambda1 = lambda1,lambda2=lambda2)
Z = qnorm(0.975)
con.reg.asp = data.frame(lower=res$reg-Z*res$sd.reg,upper=res$reg+Z*res$sd.reg)
con.reg.bs = data.frame(lower=res$reg-Z*res$reg.sd.bs,upper=res$reg+Z*res$reg.sd.bs)
con.reg.asp
con.prp.bs = data.frame(lower=res$prp-Z*res$prp.sd.bs,upper=res$prp+Z*res$prp.sd.bs)
con.dr.asp =data.frame(lower=res$dr-Z*res$sd.dr.asp,upper=res$dr+Z*res$sd.dr.asp)
con.dr.bs = data.frame(lower=res$dr-Z*res$sd.dr.bs,upper=res$dr+Z*res$sd.dr.bs)
coverage.rate
cov.rate = c(cov.reg.asp = coverage.rate(con.reg.asp,causal),
cov.reg.bs = coverage.rate(con.reg.bs,causal),
cov.dr.asp = coverage.rate(con.dr.asp,causal),
cov.dr.bs = coverage.rate(con.dr.bs,causal),
cov.prp.bs = coverage.rate(con.prp.bs,causal)
)
cov.rate
causal
mse
sqrt(mse)
causal.est
gamma0 = -1.386294; gamma1 = 1; gamma2 = 1; lambda1 = 0;lambda2=0
r=4;pho=0.7;
causal = causal.est(r=r,pho=pho,
gamma0 = gamma0, gamma1 = gamma1, gamma2 = gamma2, lambda1 = lambda1,lambda2=lambda2)
filenames = list.files(path="Simulation2/")
causal
load("~/Dropbox/UBC/Thesis/Simulation_Thesis/Thesis_SimulationDR/Simulation2/prpW500_500.Rdata")
con.dr.bs
con.prp.bs
load("~/Dropbox/UBC/Thesis/Simulation_Thesis/Thesis_SimulationDR/Simulation2/prpW100_500.Rdata")
cov.rate
causal
res
Z = qnorm(0.975)
con.reg.asp = data.frame(lower=res$reg-Z*res$sd.reg,upper=res$reg+Z*res$sd.reg)
con.reg.bs = data.frame(lower=res$reg-Z*res$reg.sd.bs,upper=res$reg+Z*res$reg.sd.bs)
# cov.reg.asp = coverage.rate(con.reg.asp,causal)
# cov.reg.bs = coverage.rate(con.reg.bs,causal)
con.prp.bs = data.frame(lower=res$prp-Z*res$prp.sd.bs,upper=res$prp+Z*res$prp.sd.bs)
#cov.prp.bs = coverage.rate(con.prp.bs,causal)
con.dr.asp =data.frame(lower=res$dr-Z*res$sd.dr.asp,upper=res$dr+Z*res$sd.dr.asp)
con.dr.bs = data.frame(lower=res$dr-Z*res$sd.dr.bs,upper=res$dr+Z*res$sd.dr.bs)
# cov.dr.asp = coverage.rate(con.dr.asp,causal)
# cov.dr.bs = coverage.rate(con.dr.bs,causal)
cov.rate = c(cov.reg.asp = coverage.rate(con.reg.asp,causal),
cov.reg.bs = coverage.rate(con.reg.bs,causal),
cov.dr.asp = coverage.rate(con.dr.asp,causal),
cov.dr.bs = coverage.rate(con.dr.bs,causal),
cov.prp.bs = coverage.rate(con.prp.bs,causal)
)
cov.rate
con.prp.bs
con.dr.asp
con.dr.bs
cov.rate
Z <- rnorm(10000,0,1)
Mean34 <- mean((1-pnorm((pho^(-1)-1)^(-0.5)*Z,0,1))^2)
Mean123 = mean((1-pnorm((pho^(-1)-1)^(-0.5)*Z,0,1))^2*pnorm((pho^(-1)-1)^(-0.5)*Z,0,1))
(Mean34*(x-y) + y)/(Mean34-Mean123)
x = logit(0.8);y=logit(0.05)
require(boot)
x = logit(0.8);y=logit(0.05)
(Mean34*(x-y) + y)/(Mean34-Mean123)
alpha3 = (Mean34*(x-y) + y)/(Mean34-Mean123)
alpha2 = x-y-alpha3
alpha2
x
y
Mean123
Mean34
x = logit(0.9);y=logit(0.05)
alpha3 = (Mean34*(x-y) + y)/(Mean34-Mean123)
alpha2 = x-y-alpha3
(alpha3 = (Mean34*(x-y) + y)/(Mean34-Mean123))
(alpha2 = x-y-alpha3)
alpha2=0.2
alpha3=0.5
x = alpha2*(1-Mean34)+alpha3*(1-Mean123)
x
inv.logit(x)
y = -alpha2*Mean34-alpha3*Mean123
inv.logit(y)
alpha2=1
alpha3=1
x = alpha2*(1-Mean34)+alpha3*(1-Mean123)
inv.logit(x)
y = -alpha2*Mean34-alpha3*Mean123
inv.logit(y)
alpha2=1
alpha3=2
x = alpha2*(1-Mean34)+alpha3*(1-Mean123)
inv.logit(x)
y = -alpha2*Mean34-alpha3*Mean123
inv.logit(y)
alpha2=1
alpha3=-1
x = alpha2*(1-Mean34)+alpha3*(1-Mean123)
inv.logit(x)
y = -alpha2*Mean34-alpha3*Mean123
inv.logit(y)
alpha2=1
alpha3=0.2
x = alpha2*(1-Mean34)+alpha3*(1-Mean123)
inv.logit(x)
y = -alpha2*Mean34-alpha3*Mean123
inv.logit(y)
alpha2=2
alpha3=0.2
x = alpha2*(1-Mean34)+alpha3*(1-Mean123)
inv.logit(x)
y = -alpha2*Mean34-alpha3*Mean123
inv.logit(y)
alpha2=3
alpha3=0.2
x = alpha2*(1-Mean34)+alpha3*(1-Mean123)
inv.logit(x)
y = -alpha2*Mean34-alpha3*Mean123
inv.logit(y)
inv.logit(y)
alpha2=3
alpha3=0.3
x = alpha2*(1-Mean34)+alpha3*(1-Mean123)
inv.logit(x)
y = -alpha2*Mean34-alpha3*Mean123
inv.logit(y)
alpha2=3
alpha3=1
x = alpha2*(1-Mean34)+alpha3*(1-Mean123)
inv.logit(x)
y = -alpha2*Mean34-alpha3*Mean123
inv.logit(y)
alpha2=3
alpha3=3
x = alpha2*(1-Mean34)+alpha3*(1-Mean123)
inv.logit(x)
y = -alpha2*Mean34-alpha3*Mean123
inv.logit(y)
alpha2=3
alpha3=2.5
x = alpha2*(1-Mean34)+alpha3*(1-Mean123)
inv.logit(x)
y = -alpha2*Mean34-alpha3*Mean123
inv.logit(y)
alpha2=5
alpha3=2.5
x = alpha2*(1-Mean34)+alpha3*(1-Mean123)
inv.logit(x)
y = -alpha2*Mean34-alpha3*Mean123
inv.logit(y)
alpha2=3
alpha3=2.5
x = alpha2*(1-Mean34)+alpha3*(1-Mean123)
inv.logit(x)
y = -alpha2*Mean34-alpha3*Mean123
inv.logit(y)
alpha0 = (logit(0.5) + logit(0.05))/2
alpha1 = (logit(0.5) - logit(0.05))/4
C = do.call(expand.grid, rep(list(c(0,1)),r))
r=4
C = do.call(expand.grid, rep(list(c(0,1)),r))
C
pho
alpha0 = (logit(0.5) + logit(0.05))/2
alpha1 = (logit(0.5) - logit(0.05))/4
r=4
alpha2=0.6
alpha3=0.2
C = do.call(expand.grid, rep(list(c(0,1)),r))
apply(C,1,function(x){
alpha0 + alpha1*(sum(x[1:3])-1.5) + alpha2*(x[1]*x[4]-Mean34) +
alpha3*(x[1]*x[2]*(1-x[3])-Mean123)
})
apply(C,1,function(x){
inv.logit(alpha0 + alpha1*(sum(x[1:3])-1.5) + alpha2*(x[1]*x[4]-Mean34) +
alpha3*(x[1]*x[2]*(1-x[3])-Mean123))
})
range=apply(C,1,function(x){
inv.logit(alpha0 + alpha1*(sum(x[1:3])-1.5) + alpha2*(x[1]*x[4]-Mean34) +
alpha3*(x[1]*x[2]*(1-x[3])-Mean123))
})
range(range)
alpha2=3
alpha3=2.5
C = do.call(expand.grid, rep(list(c(0,1)),r))
range=apply(C,1,function(x){
inv.logit(alpha0 + alpha1*(sum(x[1:3])-1.5) + alpha2*(x[1]*x[4]-Mean34) +
alpha3*(x[1]*x[2]*(1-x[3])-Mean123))
})
range(range)
alpha2=3
alpha3=2
C = do.call(expand.grid, rep(list(c(0,1)),r))
range=apply(C,1,function(x){
inv.logit(alpha0 + alpha1*(sum(x[1:3])-1.5) + alpha2*(x[1]*x[4]-Mean34) +
alpha3*(x[1]*x[2]*(1-x[3])-Mean123))
})
range(range)
alpha2=3
alpha3=1
C = do.call(expand.grid, rep(list(c(0,1)),r))
range=apply(C,1,function(x){
inv.logit(alpha0 + alpha1*(sum(x[1:3])-1.5) + alpha2*(x[1]*x[4]-Mean34) +
alpha3*(x[1]*x[2]*(1-x[3])-Mean123))
})
range(range)
alpha2=2
alpha3=2
C = do.call(expand.grid, rep(list(c(0,1)),r))
range=apply(C,1,function(x){
inv.logit(alpha0 + alpha1*(sum(x[1:3])-1.5) + alpha2*(x[1]*x[4]-Mean34) +
alpha3*(x[1]*x[2]*(1-x[3])-Mean123))
})
range(range)
causal
alpha2=2
alpha3=2
x = alpha2*(1-Mean34)+alpha3*(1-Mean123)
inv.logit(x)
y = -alpha2*Mean34-alpha3*Mean123
inv.logit(y)
alpha0 = (logit(0.5) + logit(0.05))/2
alpha1 = (logit(0.5) - logit(0.05))/4
r=4
alpha2=2
alpha3=2
C = do.call(expand.grid, rep(list(c(0,1)),r))
range=apply(C,1,function(x){
inv.logit(alpha0 + alpha1*(sum(x[1:3])-1.5) + alpha2*(x[1]*x[4]-Mean34) +
alpha3*(x[1]*x[2]*(1-x[3])-Mean123))
})
range(range)
range
plot(range)
alpha0 = (logit(0.5) + logit(0.05))/2
alpha1 = (logit(0.5) - logit(0.05))/4
r=4
alpha2=2
alpha3=2
C = do.call(expand.grid, rep(list(c(0,1)),r))
range=apply(C,1,function(x){
inv.logit(alpha0 + alpha1*(sum(x[1:3])-1.5) + alpha2*(x[3]*x[4]-Mean34) +
alpha3*(x[1]*x[2]*(1-x[3])-Mean123))
})
range(range)
require(boot)
pho=0.7
Z <- rnorm(10000,0,1)
Mean34 <- mean((1-pnorm((pho^(-1)-1)^(-0.5)*Z,0,1))^2)
Mean123 = mean((1-pnorm((pho^(-1)-1)^(-0.5)*Z,0,1))^2*pnorm((pho^(-1)-1)^(-0.5)*Z,0,1))
alpha0 = (logit(0.5) + logit(0.05))/2
alpha1 = (logit(0.5) - logit(0.05))/4
r=4
alpha2=2
alpha3=2
C = do.call(expand.grid, rep(list(c(0,1)),r))
range=apply(C,1,function(x){
inv.logit(alpha0 + alpha1*(sum(x[1:3])-1.5) + alpha2*(x[3]*x[4]-Mean34) +
alpha3*(x[1]*x[2]*(1-x[3])-Mean123))
})
range(range)
alpha0 = (logit(0.5) + logit(0.05))/2
alpha1 = (logit(0.5) - logit(0.05))/4
r=4
alpha2=1
alpha3=2
C = do.call(expand.grid, rep(list(c(0,1)),r))
range=apply(C,1,function(x){
inv.logit(alpha0 + alpha1*(sum(x[1:3])-1.5) + alpha2*(x[3]*x[4]-Mean34) +
alpha3*(x[1]*x[2]*(1-x[3])-Mean123))
})
range(range)
alpha2=1
alpha3=1
C = do.call(expand.grid, rep(list(c(0,1)),r))
range=apply(C,1,function(x){
inv.logit(alpha0 + alpha1*(sum(x[1:3])-1.5) + alpha2*(x[3]*x[4]-Mean34) +
alpha3*(x[1]*x[2]*(1-x[3])-Mean123))
})
range(range)
alpha2=1
alpha3=2
C = do.call(expand.grid, rep(list(c(0,1)),r))
range=apply(C,1,function(x){
inv.logit(alpha0 + alpha1*(sum(x[1:3])-1.5) + alpha2*(x[3]*x[4]-Mean34) +
alpha3*(x[1]*x[2]*(1-x[3])-Mean123))
})
range(range)
alpha2=1
alpha3=3
C = do.call(expand.grid, rep(list(c(0,1)),r))
range=apply(C,1,function(x){
inv.logit(alpha0 + alpha1*(sum(x[1:3])-1.5) + alpha2*(x[3]*x[4]-Mean34) +
alpha3*(x[1]*x[2]*(1-x[3])-Mean123))
})
range(range)
alpha2=2
alpha3=3
C = do.call(expand.grid, rep(list(c(0,1)),r))
range=apply(C,1,function(x){
inv.logit(alpha0 + alpha1*(sum(x[1:3])-1.5) + alpha2*(x[3]*x[4]-Mean34) +
alpha3*(x[1]*x[2]*(1-x[3])-Mean123))
})
range(range)
range(range)
alpha2=1
alpha3=3
C = do.call(expand.grid, rep(list(c(0,1)),r))
range=apply(C,1,function(x){
inv.logit(alpha0 + alpha1*(sum(x[1:3])-1.5) + alpha2*(x[3]*x[4]-Mean34) +
alpha3*(x[1]*x[2]*(1-x[3])-Mean123))
})
range(range)
library("BayDR", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
