if (missing(k_q)) k_q=1
if (missing(mean)) mean=c(0.01,0.99)
if (missing(con)) con=c(1,20)
if (missing(BinMean)) BinMean=20
if (missing(BinCon)) BinCon=20
if (missing(beta)) beta=30^2*diag(rep(1,ncol(C)+2))
if (missing(Mc.error)) Mc.error=0.001
if (missing(kappa)) kappa=0.5
if (missing(addBin)) addBin=c(0,10)
if (missing(liketype)) liketype="bernoulli"
temp.p = para.est(Y,X,C,beta=beta,k_q=k_q,Mc.error=Mc.error)
estimate.p = temp.p$P
likelihood.p=temp.p$likelihood
temp.s0 <- sat.est.old(Y,X,C)
likelihood0 = temp.s0$likelihood.old
estimate.s0 = temp.s0$est.old
ratio.likelihood0<- exp(likelihood0 - likelihood.p)
w0 <- kappa/(kappa+(1-kappa)*ratio.likelihood0)
estimate.b0 <- w0*estimate.p+(1-w0)*estimate.s0 # bayesian estimate for hirarchical version
temp.s1 <- sat.est.new(Y,X,C,k_q,mean,BinMean,con,BinCon,addBin=addBin[1],liketype=liketype)
likelihood1 = temp.s1$likelihood.new
estimate.s1 = temp.s1$est.new
ratio.likelihood1<- exp(likelihood1 - likelihood.p)
w1 <- kappa/(kappa+(1-kappa)*ratio.likelihood1)
estimate.b1 <- w1*estimate.p+(1-w1)*estimate.s1 # bayesian estimate for hirarchical version
temp.s2 <- sat.est.new(Y,X,C,k_q,mean,BinMean,con,BinCon,addBin=addBin[1],liketype=liketype)
likelihood2 = temp.s2$likelihood.new
estimate.s2 = temp.s2$est.new
ratio.likelihood2<- exp(likelihood2 - likelihood.p)
w2 <- kappa/(kappa+(1-kappa)*ratio.likelihood2)
estimate.b2 <- w2*estimate.p+(1-w2)*estimate.s2 #
return(
list(est=c(
P=estimate.p,
S0=estimate.s0,
B0=estimate.b0,
S1=estimate.s1,
B1=estimate.b1,
S2=estimate.s2,
B2=estimate.b2
),
likelihood=c(l.p=likelihood.p,l.S0=likelihood0,l.S1=likelihood1,S2=likelihood2)
)
)
}
sat2(Dat=Dat)
bay.est.old(Dat=Dat)
bay.est.sat(Dat=Dat)
bay.est.new(Dat=Dat)
sat2 <- function(Y,X,C,k_q,mean,BinMean,con,BinCon,addBin,kappa,beta,Mc.error,liketype,Dat)
{
if (missing(Y)|missing(X)|missing(C)) {Y=Dat$Y;X=Dat$X;C=Dat[,paste0("C",1:(ncol(Dat)-2))]}
if (missing(Dat)&(missing(Y)|missing(X)|missing(C))) stop("Data entry wrong Y or X or C or Dat is missing")
if (missing(k_q)) k_q=1
if (missing(mean)) mean=c(0.01,0.99)
if (missing(con)) con=c(1,20)
if (missing(BinMean)) BinMean=20
if (missing(BinCon)) BinCon=20
if (missing(beta)) beta=30^2*diag(rep(1,ncol(C)+2))
if (missing(Mc.error)) Mc.error=0.001
if (missing(kappa)) kappa=0.5
if (missing(addBin)) addBin=c(0,10)
if (missing(liketype)) liketype="bernoulli"
temp.p = para.est(Y,X,C,beta=beta,k_q=k_q,Mc.error=Mc.error)
estimate.p = temp.p$P
likelihood.p=temp.p$likelihood
temp.s0 <- sat.est.old(Y,X,C)
likelihood0 = temp.s0$likelihood.old
estimate.s0 = temp.s0$est.old
ratio.likelihood0<- exp(likelihood0 - likelihood.p)
w0 <- kappa/(kappa+(1-kappa)*ratio.likelihood0)
estimate.b0 <- w0*estimate.p+(1-w0)*estimate.s0 # bayesian estimate for hirarchical version
temp.s1 <- sat.est.new(Y,X,C,k_q,mean,BinMean,con,BinCon,addBin=addBin[1],liketype=liketype)
likelihood1 = temp.s1$likelihood.new
estimate.s1 = temp.s1$est.new
ratio.likelihood1<- exp(likelihood1 - likelihood.p)
w1 <- kappa/(kappa+(1-kappa)*ratio.likelihood1)
estimate.b1 <- w1*estimate.p+(1-w1)*estimate.s1 # bayesian estimate for hirarchical version
temp.s2 <- sat.est.new(Y,X,C,k_q,mean,BinMean,con,BinCon,addBin=addBin[2],liketype=liketype)
likelihood2 = temp.s2$likelihood.new
estimate.s2 = temp.s2$est.new
ratio.likelihood2<- exp(likelihood2 - likelihood.p)
w2 <- kappa/(kappa+(1-kappa)*ratio.likelihood2)
estimate.b2 <- w2*estimate.p+(1-w2)*estimate.s2 #
return(
list(est=c(
P=estimate.p,
S0=estimate.s0,
B0=estimate.b0,
S1=estimate.s1,
B1=estimate.b1,
S2=estimate.s2,
B2=estimate.b2
),
likelihood=c(l.p=likelihood.p,l.S0=likelihood0,l.S1=likelihood1,S2=likelihood2)
)
)
}
sat2(Dat=Dat)
est=c(1,1,"w")
is.numeric(est)
simFun <- function(Dat)
{
#source("Fun.R")
dr = est.dr(Dat)$est.dr
require(BayDR)
est = as.vector(try(sat2(Dat=Dat)$est))
#   bay1 = as.vector(try(bay.est.new(Dat=Dat,addBin=0)$est))
#   bay2 = as.vector(try(bay.est.new(Dat=Dat)$est))
if (is.numeric(est)) est=rep(NA,length(est))
res  = c(dr = dr,s0=est[2],p=est[1],b0=est[3],s1 =est[4],
b1 = est[5],s2 =est[6],
b2=est[7],
r=ncol(Dat)-2)
gc()
return(res)
}
simFun(Dat)
est = as.vector(try(sat2(Dat=Dat)$est))
est
simFun <- function(Dat)
{
#source("Fun.R")
dr = est.dr(Dat)$est.dr
require(BayDR)
est = as.vector(try(sat2(Dat=Dat)$est))
#   bay1 = as.vector(try(bay.est.new(Dat=Dat,addBin=0)$est))
#   bay2 = as.vector(try(bay.est.new(Dat=Dat)$est))
if (!is.numeric(est)) est=rep(NA,length(est))
res  = c(dr = dr,s0=est[2],p=est[1],b0=est[3],s1 =est[4],
b1 = est[5],s2 =est[6],
b2=est[7],
r=ncol(Dat)-2)
gc()
return(res)
}
simFun(Dat)
load("Datatemp/la0.Rdata")
RMSEt
names(RMSEt) = c("S0","B0","P","B1","S1","S2","B2")
melt(RMSEt,id=c("k","n"))
require(reshape2)
melt(RMSEt,id=c("k","n"))
load("Datatemp/la0.Rdata")
names(RMSEt) = c("S0","B0","P","B1","S1","S2","B2","k","n")
require(reshape2)
melt(RMSEt,id=c("k","n"))
subset=melt(RMSEt,id=c("k","n"))
head(subset)
ggplot.temp=ggplot(data=subest) +
facet_wrap(~r,scales = "free_y")+theme(legend.position = "none") +
xlab("lambda")+ylab("RMSE")
require(ggplot2)
ggplot.temp=ggplot(data=subest) +
facet_wrap(~r,scales = "free_y")+theme(legend.position = "none") +
xlab("lambda")+ylab("RMSE")
plotsave=ggplot.temp +
subset=melt(RMSEt,id=c("k","n"))
require(ggplot2)
ggplot.temp=ggplot(data=subest) +
facet_wrap(~r,scales = "free_y")+theme(legend.position = "none") +
xlab("lambda")+ylab("RMSE")
plotsave=ggplot.temp +
geom_text(aes(y=value,x=variable,label=variable,
color=factor(variable)),alpha=1,size=3,angle=15,
position = position_dodge(width=0.2))
ggplot.temp=ggplot(data=subest) +
facet_wrap(~r,scales = "free_y")+theme(legend.position = "none") +
xlab("lambda")+ylab("RMSE")
subest=melt(RMSEt,id=c("k","n"))
require(ggplot2)
ggplot.temp=ggplot(data=subest) +
facet_wrap(~r,scales = "free_y")+theme(legend.position = "none") +
xlab("lambda")+ylab("RMSE")
plotsave=ggplot.temp +
geom_text(aes(y=value,x=variable,label=variable,
color=factor(variable)),alpha=1,size=3,angle=15,
position = position_dodge(width=0.2))
plotsave
ggplot.temp=ggplot(data=subest) +
facet_wrap(n~k,scales = "free_y")+theme(legend.position = "none") +
xlab("lambda")+ylab("RMSE")
plotsave=ggplot.temp +
geom_text(aes(y=value,x=variable,label=variable,
color=factor(variable)),alpha=1,size=3,angle=15,
position = position_dodge(width=0.2))
plotsave
plot.save
head(subset)
subset$k = paste("k",subset$k)
subset$k
subset$k = paste0("k",subset$k)
subest=melt(RMSEt,id=c("k","n"))
subset$k = paste0("k",subset$k)
subset
subest=melt(RMSEt,id=c("k","n"))
subest
subset$k = paste0("k",subset$k)
subset
subest=melt(RMSEt,id=c("k","n"))
paste0("k",subset$k)
subset$k
subest=melt(RMSEt,id=c("k","n"))
subset$k = paste0("k",subest$k)
subest=melt(RMSEt,id=c("k","n"))
subest$k = paste0("k",subest$k)
subest
subest$n = paste0("n",subset$n)
ggplot.temp=ggplot(data=subest) +
facet_wrap(n~k,scales = "free_y")+theme(legend.position = "none") +
xlab("lambda")+ylab("RMSE")
plotsave=ggplot.temp +
geom_text(aes(y=value,x=variable,label=variable,
color=factor(variable)),alpha=1,size=3,angle=15,
position = position_dodge(width=0.2))
plot.save
plotsave
subest$k = paste0("k=",subest$k)
subest$n = paste0("n=",subset$n)
require(ggplot2)
ggplot.temp=ggplot(data=subest) +
facet_wrap(n~k,scales = "free_y")+theme(legend.position = "none") +
xlab("lambda")+ylab("RMSE")
plotsave=ggplot.temp +
geom_text(aes(y=value,x=variable,label=variable,
color=factor(variable)),alpha=1,size=3,angle=15,
position = position_dodge(width=0.2))
plotsave
figName= "SimLast1"
ggsave(plot=plotsave,filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=10,height=6)
capName="Root-mean-squared error of estimates $\\widehat \\Delta_{S0},\\widehat \\Delta_{P0},\\widehat \\Delta_{B0},\\widehat \\Delta_{S1},\\widehat \\Delta_{P1},\\widehat \\Delta_{B1},\\widehat \\Delta_{S2},
\\widehat \\Delta_{P2},\\widehat \\Delta_{B2}$. Note that the true value of $\\Delta$ is around 0.15.
Each panel is simulated under different number of confounders ranging from 4 to 12. "
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
print.figure(writeto=paste0("~/Dropbox/UBC/Thesis/",figName,".tex",filename=figName,placement="h",
caption=capName,label=figname)
print.figure(writeto=paste0("~/Dropbox/UBC/Thesis/",figName,".tex"),filename=figName,placement="h",
caption=capName,label=figname)
print.figure(writeto=paste0("~/Dropbox/UBC/Thesis/",figName,".tex"),filename=figName,placement="h",
caption=capName,label=figName)
subest=melt(RMSEt,id=c("k","n"))
subest$k = paste0("k=",subest$k)
subest$n = paste0("n=",subset$n)
require(ggplot2)
ggplot.temp=ggplot(data=subest) +
facet_wrap(n~k,scales = "free_y")+theme(legend.position = "none") +
xlab("lambda")+ylab("RMSE")
plotsave=ggplot.temp +
geom_text(aes(y=value,x=variable,label=variable,
color=factor(variable)),alpha=1,size=3,angle=15,
position = position_dodge(width=0.2))
figName= "SimLast1"
ggsave(plot=plotsave,filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=10,height=6)
capName="Root-mean-squared error of estimates $\\widehat \\Delta_{S0},\\widehat \\Delta_{P0},\\widehat \\Delta_{B0},\\widehat \\Delta_{S1},\\widehat \\Delta_{P1},\\widehat \\Delta_{B1},\\widehat \\Delta_{S2},
\\widehat \\Delta_{P2},\\widehat \\Delta_{B2}$. Note that the true value of $\\Delta$ is around 0.15.
Each panel is simulated under different number of confounders ranging from 4 to 12. "
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
print.figure(writeto=paste0("~/Dropbox/UBC/Thesis/",figName,".tex"),filename=figName,placement="h",
caption=capName,label=figName)
capName="Root-mean-squared error of estimates $\\widehat \\Delta_{S0},\\widehat \\Delta_{P},
\\widehat \\Delta_{B0},\\widehat \\Delta_{S1},
\\widehat \\Delta_{B1},\\widehat \\Delta_{S2},
,\\widehat \\Delta_{B2}$.
Each panel is simulated under different values of number of confouder blocks, $k$, and sample size, $n$. "
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
print.figure(writeto=paste0("~/Dropbox/UBC/Thesis/",figName,".tex"),filename=figName,placement="h",
caption=capName,label=figName)
load("Datatemp/la2.Rdata")
names(RMSEt) = c("S0","B0","P","B1","S1","S2","B2","k","n")
require(reshape2)
subest=melt(RMSEt,id=c("k","n"))
head(subset)
subest$k = paste0("k=",subest$k)
subest$n = paste0("n=",subset$n)
require(ggplot2)
ggplot.temp=ggplot(data=subest) +
facet_wrap(n~k,scales = "free_y")+theme(legend.position = "none") +
xlab("lambda")+ylab("RMSE")
plotsave=ggplot.temp +
geom_text(aes(y=value,x=variable,label=variable,
color=factor(variable)),alpha=1,size=3,angle=15,
position = position_dodge(width=0.2))
figName= "SimLast2"
ggsave(plot=plotsave,filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=10,height=6)
capName="Root-mean-squared error of estimates $\\widehat \\Delta_{S0},\\widehat \\Delta_{P},
\\widehat \\Delta_{B0},\\widehat \\Delta_{S1},
\\widehat \\Delta_{B1},\\widehat \\Delta_{S2},
,\\widehat \\Delta_{B2}$.
Each panel is simulated under different values of number of confouder blocks, $k$, and sample size, $n$. "
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
print.figure(writeto=paste0("~/Dropbox/UBC/Thesis/",figName,".tex"),filename=figName,placement="h",
caption=capName,label=figName)
load("Datatemp/la0.Rdata")
names(RMSEt) = c("S0","B0","P","B1","S1","S2","B2","k","n")
require(reshape2)
subest=melt(RMSEt,id=c("k","n"))
head(subset)
subest$k = paste0("k=",subest$k)
subest$n = paste0("n=",subset$n)
require(ggplot2)
ggplot.temp=ggplot(data=subest) +
facet_wrap(n~k,scales = "free_y")+theme(legend.position = "none") +
xlab("lambda")+ylab("RMSE")
plotsave=ggplot.temp +
geom_text(aes(y=value,x=variable,label=variable,
color=factor(variable)),alpha=1,size=3,angle=15,
position = position_dodge(width=0.2))
figName= "SimLast1"
ggsave(plot=plotsave,filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=10,height=6)
figName= "SimLast1"
ggsave(plot=plotsave,filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=10,height=6)
capName="RRMSE of estimates $\\widehat \\Delta_{S0},\\widehat \\Delta_{P},
\\widehat \\Delta_{B0},\\widehat \\Delta_{S1},
\\widehat \\Delta_{B1},\\widehat \\Delta_{S2},
,\\widehat \\Delta_{B2}$ based on $\\rho=0.3, \\gamma_0 = \\text{logit(0.2)},\\gamma_1=\\gamma_2=1$ and $\\lambda_1=\\lambda_2=0$
Each panel is simulated under different values of number of confouder blocks, $k$, and sample size, $n$. "
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
print.figure(writeto=paste0("~/Dropbox/UBC/Thesis/",figName,".tex"),filename=figName,placement="h",
caption=capName,label=figName)
load("Datatemp/la2.Rdata")
names(RMSEt) = c("S0","B0","P","B1","S1","S2","B2","k","n")
require(reshape2)
subest=melt(RMSEt,id=c("k","n"))
head(subset)
subest$k = paste0("k=",subest$k)
subest$n = paste0("n=",subset$n)
require(ggplot2)
ggplot.temp=ggplot(data=subest) +
facet_wrap(n~k,scales = "free_y")+theme(legend.position = "none") +
xlab("lambda")+ylab("RMSE")
plotsave=ggplot.temp +
geom_text(aes(y=value,x=variable,label=variable,
color=factor(variable)),alpha=1,size=3,angle=15,
position = position_dodge(width=0.2))
ggsave(plot=plotsave,filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=10,height=6)
figName= "SimLast2"
ggsave(plot=plotsave,filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=10,height=6)
load("Datatemp/la0.Rdata")
names(RMSEt) = c("S0","B0","P","B1","S1","S2","B2","k","n")
require(reshape2)
subest=melt(RMSEt,id=c("k","n"))
head(subset)
subest$k = paste0("k=",subest$k)
subest$n = paste0("n=",subset$n)
require(ggplot2)
ggplot.temp=ggplot(data=subest) +
facet_wrap(n~k,scales = "free_y")+theme(legend.position = "none") +
xlab("lambda")+ylab("RMSE")
plotsave=ggplot.temp +
geom_text(aes(y=value,x=variable,label=variable,
color=factor(variable)),alpha=1,size=3,angle=15,
position = position_dodge(width=0.2))
figName= "SimLast1"
ggsave(plot=plotsave,filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=10,height=6)
capName="RRMSE of estimates $\\widehat \\Delta_{S0},\\widehat \\Delta_{P},
\\widehat \\Delta_{B0},\\widehat \\Delta_{S1},
\\widehat \\Delta_{B1},\\widehat \\Delta_{S2},
,\\widehat \\Delta_{B2}$ based on $\\rho=0.3, \\gamma_0 = \\text{logit(0.2)},\\gamma_1=\\gamma_2=1$ and $\\lambda_1=\\lambda_2=0$
Each panel is simulated under different values of number of confouder blocks, $k$, and sample size, $n$. "
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
print.figure(writeto=paste0("~/Dropbox/UBC/Thesis/",figName,".tex"),filename=figName,placement="h",
caption=capName,label=figName)
load("Datatemp/la2.Rdata")
names(RMSEt) = c("S0","B0","P","B1","S1","S2","B2","k","n")
require(reshape2)
subest=melt(RMSEt,id=c("k","n"))
head(subset)
subest$k = paste0("k=",subest$k)
subest$n = paste0("n=",subset$n)
require(ggplot2)
ggplot.temp=ggplot(data=subest) +
facet_wrap(n~k,scales = "free_y")+theme(legend.position = "none") +
xlab("lambda")+ylab("RMSE")
plotsave=ggplot.temp +
geom_text(aes(y=value,x=variable,label=variable,
color=factor(variable)),alpha=1,size=3,angle=15,
position = position_dodge(width=0.2))
figName= "SimLast2"
ggsave(plot=plotsave,filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=10,height=6)
capName="RRMSE of estimates $\\widehat \\Delta_{S0},\\widehat \\Delta_{P},
\\widehat \\Delta_{B0},\\widehat \\Delta_{S1},
\\widehat \\Delta_{B1},\\widehat \\Delta_{S2},
,\\widehat \\Delta_{B2}$ based on $\\rho=0.3, \\gamma_0 = \\text{logit(0.2)},\\gamma_1=\\gamma_2=1$ and $\\lambda_1=\\lambda_2=2$
Each panel is simulated under different values of number of confouder blocks, $k$, and sample size, $n$. "
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
print.figure(writeto=paste0("~/Dropbox/UBC/Thesis/",figName,".tex"),filename=figName,placement="h",
caption=capName,label=figName)
load("Datatemp/la2.Rdata")
names(RMSEt) = c("S0","B0","P","B1","S1","S2","B2","k","n")
require(reshape2)
subest=melt(RMSEt,id=c("k","n"))
head(subset)
subest$k = paste0("k=",subest$k)
subest$n = paste0("n=",subset$n)
require(ggplot2)
ggplot.temp=ggplot(data=subest) +
facet_wrap(n~k,scales = "free_y")+theme(legend.position = "none") +
xlab("lambda")+ylab("RMSE")
plotsave=ggplot.temp +
geom_text(aes(y=value,x=variable,label=variable,
color=factor(variable)),alpha=1,size=3,angle=15,
position = position_dodge(width=0.2))
figName= "SimLast2"
ggsave(plot=plotsave,filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=10,height=6)
capName="RRMSE of estimates $\\widehat \\Delta_{S0},\\widehat \\Delta_{P},
\\widehat \\Delta_{B0},\\widehat \\Delta_{S1},
\\widehat \\Delta_{B1},\\widehat \\Delta_{S2},
,\\widehat \\Delta_{B2}$ based on $\\rho=0.3, \\gamma_0 = \\text{logit(0.2)},\\gamma_1=\\gamma_2=1$ and $\\lambda_1=\\lambda_2=2$
Each panel is simulated under different values of number of confouder blocks, $k$, and sample size, $n$. "
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
print.figure(writeto=paste0("~/Dropbox/UBC/Thesis/",figName,".tex"),filename=figName,placement="h",
caption=capName,label=figName)
load("Datatemp/la0.Rdata")
names(RMSEt) = c("S0","B0","P","B1","S1","S2","B2","k","n")
require(reshape2)
subest=melt(RMSEt,id=c("k","n"))
head(subset)
subest$k = paste0("k=",subest$k)
subest$n = paste0("n=",subset$n)
require(ggplot2)
ggplot.temp=ggplot(data=subest) +
facet_wrap(n~k,scales = "free_y")+theme(legend.position = "none") +
xlab("")+ylab("RMSE")
plotsave=ggplot.temp +
geom_text(aes(y=value,x=variable,label=variable,
color=factor(variable)),alpha=1,size=3,angle=15,
position = position_dodge(width=0.2))
figName= "SimLast1"
ggsave(plot=plotsave,filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=10,height=6)
capName="RRMSE of estimates $\\widehat \\Delta_{S0},\\widehat \\Delta_{P},
\\widehat \\Delta_{B0},\\widehat \\Delta_{S1},
\\widehat \\Delta_{B1},\\widehat \\Delta_{S2},
,\\widehat \\Delta_{B2}$ based on $\\rho=0.3, \\gamma_0 = \\text{logit(0.2)},\\gamma_1=\\gamma_2=1$ and $\\lambda_1=\\lambda_2=0$
Each panel is simulated under different values of number of confouder blocks, $k$, and sample size, $n$. "
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
print.figure(writeto=paste0("~/Dropbox/UBC/Thesis/",figName,".tex"),filename=figName,placement="h",
caption=capName,label=figName)
load("Datatemp/la2.Rdata")
names(RMSEt) = c("S0","B0","P","B1","S1","S2","B2","k","n")
require(reshape2)
subest=melt(RMSEt,id=c("k","n"))
head(subset)
subest$k = paste0("k=",subest$k)
subest$n = paste0("n=",subset$n)
require(ggplot2)
ggplot.temp=ggplot(data=subest) +
facet_wrap(n~k,scales = "free_y")+theme(legend.position = "none") +
xlab("")+ylab("RMSE")
plotsave=ggplot.temp +
geom_text(aes(y=value,x=variable,label=variable,
color=factor(variable)),alpha=1,size=3,angle=15,
position = position_dodge(width=0.2))
figName= "SimLast2"
ggsave(plot=plotsave,filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=10,height=6)
capName="RRMSE of estimates $\\widehat \\Delta_{S0},\\widehat \\Delta_{P},
\\widehat \\Delta_{B0},\\widehat \\Delta_{S1},
\\widehat \\Delta_{B1},\\widehat \\Delta_{S2},
,\\widehat \\Delta_{B2}$ based on $\\rho=0.3, \\gamma_0 = \\text{logit(0.2)},\\gamma_1=\\gamma_2=1$ and $\\lambda_1=\\lambda_2=2$
Each panel is simulated under different values of number of confouder blocks, $k$, and sample size, $n$. "
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
print.figure(writeto=paste0("~/Dropbox/UBC/Thesis/",figName,".tex"),filename=figName,placement="h",
caption=capName,label=figName)
load("Datatemp/la0.Rdata")
names(RMSEt) = c("S0","B0","P","B1","S1","S2","B2","k","n")
require(reshape2)
subest=melt(RMSEt,id=c("k","n"))
head(subset)
subest$k = paste0("k=",subest$k)
subest$n = paste0("n=",subset$n)
require(ggplot2)
ggplot.temp=ggplot(data=subest) +
facet_wrap(n~k,scales = "free_y")+theme(legend.position = "none") +
xlab("")+ylab("RRMSE")
plotsave=ggplot.temp +
geom_text(aes(y=value,x=variable,label=variable,
color=factor(variable)),alpha=1,size=3,angle=15,
position = position_dodge(width=0.2))
figName= "SimLast1"
ggsave(plot=plotsave,filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=10,height=6)
capName="RRMSE of estimates $\\widehat \\Delta_{S0},\\widehat \\Delta_{P},
\\widehat \\Delta_{B0},\\widehat \\Delta_{S1},
\\widehat \\Delta_{B1},\\widehat \\Delta_{S2},
,\\widehat \\Delta_{B2}$ based on $\\rho=0.3, \\gamma_0 = \\text{logit(0.2)},\\gamma_1=\\gamma_2=1$ and $\\lambda_1=\\lambda_2=0$
Each panel is simulated under different values of number of confouder blocks, $k$, and sample size, $n$. "
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
print.figure(writeto=paste0("~/Dropbox/UBC/Thesis/",figName,".tex"),filename=figName,placement="h",
caption=capName,label=figName)
load("Datatemp/la2.Rdata")
names(RMSEt) = c("S0","B0","P","B1","S1","S2","B2","k","n")
require(reshape2)
subest=melt(RMSEt,id=c("k","n"))
head(subset)
subest$k = paste0("k=",subest$k)
subest$n = paste0("n=",subset$n)
require(ggplot2)
ggplot.temp=ggplot(data=subest) +
facet_wrap(n~k,scales = "free_y")+theme(legend.position = "none") +
xlab("")+ylab("RRMSE")
plotsave=ggplot.temp +
geom_text(aes(y=value,x=variable,label=variable,
color=factor(variable)),alpha=1,size=3,angle=15,
position = position_dodge(width=0.2))
figName= "SimLast2"
ggsave(plot=plotsave,filename=paste0("~/Dropbox/UBC/Thesis/",figName,".pdf"),width=10,height=6)
capName="RRMSE of estimates $\\widehat \\Delta_{S0},\\widehat \\Delta_{P},
\\widehat \\Delta_{B0},\\widehat \\Delta_{S1},
\\widehat \\Delta_{B1},\\widehat \\Delta_{S2},
,\\widehat \\Delta_{B2}$ based on $\\rho=0.3, \\gamma_0 = \\text{logit(0.2)},\\gamma_1=\\gamma_2=1$ and $\\lambda_1=\\lambda_2=2$
Each panel is simulated under different values of number of confouder blocks, $k$, and sample size, $n$. "
source("~/Dropbox/UBC/Thesis/Simulation_Thesis/printFigure.R")
print.figure(writeto=paste0("~/Dropbox/UBC/Thesis/",figName,".tex"),filename=figName,placement="h",
caption=capName,label=figName)
